{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\yatsite\\\\frontend\\\\yat\\\\src\\\\layouts\\\\homepage\\\\EventCardPage.tsx\",\n  _s = $RefreshSig$();\nimport { EventCard } from './EventCard/EventCard';\nimport EventModel from '../../models/EventModel';\nimport OptionModel from '../../models/OptionModel';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventCardPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const baseUrl = 'http://localhost:8080/api/events';\n      const url = `${baseUrl}?page=0&size=9`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.events;\n      const loadedEvents = [];\n      for (const key in responseData) {\n        loadedEvents.push({\n          eventId: responseData[key].eventId,\n          prompt: responseData[key].prompt,\n          isCard: responseData[key].isCard,\n          options: responseData[key].options\n        });\n      }\n    };\n  });\n  const firstEvent = new EventModel(0, \"Where do we find you in the tavern at this time?\", false, [new OptionModel(0, \"Bar\", new EventModel(1, \"Grab a Tankard and have a seat!\", false, [])), new OptionModel(1, \"Dining Room\", new EventModel(2, \"Get a Knife ready for the meal to come.\", false, [])), new OptionModel(2, \"Library\", new EventModel(3, \"Ah. Looking for a good read? Grab that book over there: Tome of Bludgeoning. It is a good read. I promise.\", false, [])), new OptionModel(3, \"My Room\", new EventModel(4, \"There is a bucket near the bed for... Y'know? If you need it.\", false, []))]);\n  return /*#__PURE__*/_jsxDEV(EventCard, {\n    prompt: firstEvent.prompt,\n    options: firstEvent.options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCardPage, \"hzWUc9CqrpD5jf43Hh770zQ75WI=\");\n_c = EventCardPage;\nvar _c;\n$RefreshReg$(_c, \"EventCardPage\");","map":{"version":3,"names":["EventCard","EventModel","OptionModel","useEffect","useState","jsxDEV","_jsxDEV","EventCardPage","_s","events","setEvents","isLoading","setIsLoading","httpError","setHttpError","fetchEvents","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedEvents","key","push","eventId","prompt","isCard","options","firstEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/yatsite/frontend/yat/src/layouts/homepage/EventCardPage.tsx"],"sourcesContent":["import { EventCard } from './EventCard/EventCard';\r\nimport EventModel from '../../models/EventModel';\r\nimport OptionModel from '../../models/OptionModel';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const EventCardPage = () => {\r\n\r\n  const [events, setEvents] = useState<EventModel[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const baseUrl: string = 'http://localhost:8080/api/events';\r\n      const url: string = `${baseUrl}?page=0&size=9`;\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseJson = await response.json();\r\n      const responseData = responseJson._embedded.events;\r\n      const loadedEvents: EventModel[] = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedEvents.push({\r\n          eventId: responseData[key].eventId,\r\n          prompt: responseData[key].prompt,\r\n          isCard: responseData[key].isCard,\r\n          options: responseData[key].options\r\n        })\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  const firstEvent: EventModel = \r\n  new EventModel(\r\n    0,\r\n    \"Where do we find you in the tavern at this time?\", \r\n    false, \r\n    [\r\n      new OptionModel(\r\n        0,\r\n        \"Bar\",\r\n        new EventModel(\r\n          1,\r\n          \"Grab a Tankard and have a seat!\",\r\n          false,\r\n          []\r\n        )\r\n      ),\r\n      new OptionModel(\r\n        1,\r\n        \"Dining Room\",\r\n        new EventModel(\r\n          2,\r\n          \"Get a Knife ready for the meal to come.\",\r\n          false,\r\n          []\r\n        )\r\n      ),\r\n      new OptionModel(\r\n        2,\r\n        \"Library\",\r\n        new EventModel(\r\n          3,\r\n          \"Ah. Looking for a good read? Grab that book over there: Tome of Bludgeoning. It is a good read. I promise.\",\r\n          false,\r\n          []\r\n        )\r\n      ),\r\n      new OptionModel(\r\n        3,\r\n        \"My Room\",\r\n        new EventModel(\r\n          4,\r\n          \"There is a bucket near the bed for... Y'know? If you need it.\",\r\n          false,\r\n          []\r\n        )\r\n      )\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EventCard prompt={firstEvent.prompt} options={firstEvent.options}/>\r\n  )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EACtD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,OAAe,GAAG,kCAAkC;MAC1D,MAAMC,GAAW,GAAI,GAAED,OAAQ,gBAAe;MAC9C,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAEjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1C,MAAMC,YAAY,GAAGF,YAAY,CAACG,SAAS,CAAChB,MAAM;MAClD,MAAMiB,YAA0B,GAAG,EAAE;MAErC,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC9BE,YAAY,CAACE,IAAI,CAAC;UAChBC,OAAO,EAAEL,YAAY,CAACG,GAAG,CAAC,CAACE,OAAO;UAClCC,MAAM,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,MAAM;UAChCC,MAAM,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,MAAM;UAChCC,OAAO,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC7B,CAAC,CAAC;MACJ;IAEF,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,UAAsB,GAC5B,IAAIhC,UAAU,CACZ,CAAC,EACD,kDAAkD,EAClD,KAAK,EACL,CACE,IAAIC,WAAW,CACb,CAAC,EACD,KAAK,EACL,IAAID,UAAU,CACZ,CAAC,EACD,iCAAiC,EACjC,KAAK,EACL,EACF,CACF,CAAC,EACD,IAAIC,WAAW,CACb,CAAC,EACD,aAAa,EACb,IAAID,UAAU,CACZ,CAAC,EACD,yCAAyC,EACzC,KAAK,EACL,EACF,CACF,CAAC,EACD,IAAIC,WAAW,CACb,CAAC,EACD,SAAS,EACT,IAAID,UAAU,CACZ,CAAC,EACD,4GAA4G,EAC5G,KAAK,EACL,EACF,CACF,CAAC,EACD,IAAIC,WAAW,CACb,CAAC,EACD,SAAS,EACT,IAAID,UAAU,CACZ,CAAC,EACD,+DAA+D,EAC/D,KAAK,EACL,EACF,CACF,CAAC,CAEL,CAAC;EAED,oBACEK,OAAA,CAACN,SAAS;IAAC8B,MAAM,EAAEG,UAAU,CAACH,MAAO;IAACE,OAAO,EAAEC,UAAU,CAACD;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAExE,CAAC;AAAA7B,EAAA,CApFYD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}